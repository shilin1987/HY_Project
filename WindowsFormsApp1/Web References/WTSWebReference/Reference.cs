//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WindowsFormsApp1.WTSWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthorityServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AuthorityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAuthTokenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthorityService() {
            this.Url = global::WindowsFormsApp1.Properties.Settings.Default.WindowsFormsApp1_WTSWebReference_AuthorityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAuthTokenCompletedEventHandler GetAuthTokenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuthToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel GetAuthToken(string Code, string PassWord, string Ip) {
            object[] results = this.Invoke("GetAuthToken", new object[] {
                        Code,
                        PassWord,
                        Ip});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthTokenAsync(string Code, string PassWord, string Ip) {
            this.GetAuthTokenAsync(Code, PassWord, Ip, null);
        }
        
        /// <remarks/>
        public void GetAuthTokenAsync(string Code, string PassWord, string Ip, object userState) {
            if ((this.GetAuthTokenOperationCompleted == null)) {
                this.GetAuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthTokenOperationCompleted);
            }
            this.InvokeAsync("GetAuthToken", new object[] {
                        Code,
                        PassWord,
                        Ip}, this.GetAuthTokenOperationCompleted, userState);
        }
        
        private void OnGetAuthTokenOperationCompleted(object arg) {
            if ((this.GetAuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthTokenCompleted(this, new GetAuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResCommonModel {
        
        private string resFlagField;
        
        private string resMsgField;
        
        private string resCodeField;
        
        private object resDataField;
        
        private ResCommonModel[] resObjField;
        
        /// <remarks/>
        public string resFlag {
            get {
                return this.resFlagField;
            }
            set {
                this.resFlagField = value;
            }
        }
        
        /// <remarks/>
        public string resMsg {
            get {
                return this.resMsgField;
            }
            set {
                this.resMsgField = value;
            }
        }
        
        /// <remarks/>
        public string resCode {
            get {
                return this.resCodeField;
            }
            set {
                this.resCodeField = value;
            }
        }
        
        /// <remarks/>
        public object resData {
            get {
                return this.resDataField;
            }
            set {
                this.resDataField = value;
            }
        }
        
        /// <remarks/>
        public ResCommonModel[] resObj {
            get {
                return this.resObjField;
            }
            set {
                this.resObjField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAuthTokenCompletedEventHandler(object sender, GetAuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591