//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WindowsFormsApp1.AttendanceWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AttendanceServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AttendanceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAttendancePeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendanceRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSingleAttendanceRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSummaryAttendanceResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailAttendanceResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHolidayApplyResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOvertTimeApplyResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AttendanceApplyResultAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyResultRevokeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeoFenceGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExceptionGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AttendCommonBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalaryOutputOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AttendanceService() {
            this.Url = global::WindowsFormsApp1.Properties.Settings.Default.WindowsFormsApp1_AttendanceWebReference_AttendanceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAttendancePeriodCompletedEventHandler GetAttendancePeriodCompleted;
        
        /// <remarks/>
        public event GetAttendanceRecordCompletedEventHandler GetAttendanceRecordCompleted;
        
        /// <remarks/>
        public event AddSingleAttendanceRecordCompletedEventHandler AddSingleAttendanceRecordCompleted;
        
        /// <remarks/>
        public event GetSummaryAttendanceResultCompletedEventHandler GetSummaryAttendanceResultCompleted;
        
        /// <remarks/>
        public event GetDetailAttendanceResultCompletedEventHandler GetDetailAttendanceResultCompleted;
        
        /// <remarks/>
        public event AddHolidayApplyResultCompletedEventHandler AddHolidayApplyResultCompleted;
        
        /// <remarks/>
        public event AddOvertTimeApplyResultCompletedEventHandler AddOvertTimeApplyResultCompleted;
        
        /// <remarks/>
        public event AttendanceApplyResultAddCompletedEventHandler AttendanceApplyResultAddCompleted;
        
        /// <remarks/>
        public event ApplyResultRevokeCompletedEventHandler ApplyResultRevokeCompleted;
        
        /// <remarks/>
        public event GeoFenceGetCompletedEventHandler GeoFenceGetCompleted;
        
        /// <remarks/>
        public event ExceptionGetCompletedEventHandler ExceptionGetCompleted;
        
        /// <remarks/>
        public event AttendCommonBusinessCompletedEventHandler AttendCommonBusinessCompleted;
        
        /// <remarks/>
        public event SalaryOutputCompletedEventHandler SalaryOutputCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttendancePeriod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel GetAttendancePeriod(string AuthToken, string SearchParams) {
            object[] results = this.Invoke("GetAttendancePeriod", new object[] {
                        AuthToken,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendancePeriodAsync(string AuthToken, string SearchParams) {
            this.GetAttendancePeriodAsync(AuthToken, SearchParams, null);
        }
        
        /// <remarks/>
        public void GetAttendancePeriodAsync(string AuthToken, string SearchParams, object userState) {
            if ((this.GetAttendancePeriodOperationCompleted == null)) {
                this.GetAttendancePeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendancePeriodOperationCompleted);
            }
            this.InvokeAsync("GetAttendancePeriod", new object[] {
                        AuthToken,
                        SearchParams}, this.GetAttendancePeriodOperationCompleted, userState);
        }
        
        private void OnGetAttendancePeriodOperationCompleted(object arg) {
            if ((this.GetAttendancePeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendancePeriodCompleted(this, new GetAttendancePeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttendanceRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel GetAttendanceRecord(string AuthToken, string SearchParams) {
            object[] results = this.Invoke("GetAttendanceRecord", new object[] {
                        AuthToken,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendanceRecordAsync(string AuthToken, string SearchParams) {
            this.GetAttendanceRecordAsync(AuthToken, SearchParams, null);
        }
        
        /// <remarks/>
        public void GetAttendanceRecordAsync(string AuthToken, string SearchParams, object userState) {
            if ((this.GetAttendanceRecordOperationCompleted == null)) {
                this.GetAttendanceRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendanceRecordOperationCompleted);
            }
            this.InvokeAsync("GetAttendanceRecord", new object[] {
                        AuthToken,
                        SearchParams}, this.GetAttendanceRecordOperationCompleted, userState);
        }
        
        private void OnGetAttendanceRecordOperationCompleted(object arg) {
            if ((this.GetAttendanceRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendanceRecordCompleted(this, new GetAttendanceRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddSingleAttendanceRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel AddSingleAttendanceRecord(string AuthToken, string UserCode, string QkTime, string Inout, string DataType, string Devno, string Remarks, string LoginCode, string OpeType, string ExtParams) {
            object[] results = this.Invoke("AddSingleAttendanceRecord", new object[] {
                        AuthToken,
                        UserCode,
                        QkTime,
                        Inout,
                        DataType,
                        Devno,
                        Remarks,
                        LoginCode,
                        OpeType,
                        ExtParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void AddSingleAttendanceRecordAsync(string AuthToken, string UserCode, string QkTime, string Inout, string DataType, string Devno, string Remarks, string LoginCode, string OpeType, string ExtParams) {
            this.AddSingleAttendanceRecordAsync(AuthToken, UserCode, QkTime, Inout, DataType, Devno, Remarks, LoginCode, OpeType, ExtParams, null);
        }
        
        /// <remarks/>
        public void AddSingleAttendanceRecordAsync(string AuthToken, string UserCode, string QkTime, string Inout, string DataType, string Devno, string Remarks, string LoginCode, string OpeType, string ExtParams, object userState) {
            if ((this.AddSingleAttendanceRecordOperationCompleted == null)) {
                this.AddSingleAttendanceRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSingleAttendanceRecordOperationCompleted);
            }
            this.InvokeAsync("AddSingleAttendanceRecord", new object[] {
                        AuthToken,
                        UserCode,
                        QkTime,
                        Inout,
                        DataType,
                        Devno,
                        Remarks,
                        LoginCode,
                        OpeType,
                        ExtParams}, this.AddSingleAttendanceRecordOperationCompleted, userState);
        }
        
        private void OnAddSingleAttendanceRecordOperationCompleted(object arg) {
            if ((this.AddSingleAttendanceRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSingleAttendanceRecordCompleted(this, new AddSingleAttendanceRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSummaryAttendanceResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel GetSummaryAttendanceResult(string AuthToken, string SearchParams) {
            object[] results = this.Invoke("GetSummaryAttendanceResult", new object[] {
                        AuthToken,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetSummaryAttendanceResultAsync(string AuthToken, string SearchParams) {
            this.GetSummaryAttendanceResultAsync(AuthToken, SearchParams, null);
        }
        
        /// <remarks/>
        public void GetSummaryAttendanceResultAsync(string AuthToken, string SearchParams, object userState) {
            if ((this.GetSummaryAttendanceResultOperationCompleted == null)) {
                this.GetSummaryAttendanceResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSummaryAttendanceResultOperationCompleted);
            }
            this.InvokeAsync("GetSummaryAttendanceResult", new object[] {
                        AuthToken,
                        SearchParams}, this.GetSummaryAttendanceResultOperationCompleted, userState);
        }
        
        private void OnGetSummaryAttendanceResultOperationCompleted(object arg) {
            if ((this.GetSummaryAttendanceResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSummaryAttendanceResultCompleted(this, new GetSummaryAttendanceResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDetailAttendanceResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel GetDetailAttendanceResult(string AuthToken, string SearchParams) {
            object[] results = this.Invoke("GetDetailAttendanceResult", new object[] {
                        AuthToken,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailAttendanceResultAsync(string AuthToken, string SearchParams) {
            this.GetDetailAttendanceResultAsync(AuthToken, SearchParams, null);
        }
        
        /// <remarks/>
        public void GetDetailAttendanceResultAsync(string AuthToken, string SearchParams, object userState) {
            if ((this.GetDetailAttendanceResultOperationCompleted == null)) {
                this.GetDetailAttendanceResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailAttendanceResultOperationCompleted);
            }
            this.InvokeAsync("GetDetailAttendanceResult", new object[] {
                        AuthToken,
                        SearchParams}, this.GetDetailAttendanceResultOperationCompleted, userState);
        }
        
        private void OnGetDetailAttendanceResultOperationCompleted(object arg) {
            if ((this.GetDetailAttendanceResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailAttendanceResultCompleted(this, new GetDetailAttendanceResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddHolidayApplyResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel AddHolidayApplyResult(string AuthToken, string UserCode, string ApplyType, string ApplyMode, string BeginDate, string EndDate, string ApplyID, string Remarks, string LoginCode) {
            object[] results = this.Invoke("AddHolidayApplyResult", new object[] {
                        AuthToken,
                        UserCode,
                        ApplyType,
                        ApplyMode,
                        BeginDate,
                        EndDate,
                        ApplyID,
                        Remarks,
                        LoginCode});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void AddHolidayApplyResultAsync(string AuthToken, string UserCode, string ApplyType, string ApplyMode, string BeginDate, string EndDate, string ApplyID, string Remarks, string LoginCode) {
            this.AddHolidayApplyResultAsync(AuthToken, UserCode, ApplyType, ApplyMode, BeginDate, EndDate, ApplyID, Remarks, LoginCode, null);
        }
        
        /// <remarks/>
        public void AddHolidayApplyResultAsync(string AuthToken, string UserCode, string ApplyType, string ApplyMode, string BeginDate, string EndDate, string ApplyID, string Remarks, string LoginCode, object userState) {
            if ((this.AddHolidayApplyResultOperationCompleted == null)) {
                this.AddHolidayApplyResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHolidayApplyResultOperationCompleted);
            }
            this.InvokeAsync("AddHolidayApplyResult", new object[] {
                        AuthToken,
                        UserCode,
                        ApplyType,
                        ApplyMode,
                        BeginDate,
                        EndDate,
                        ApplyID,
                        Remarks,
                        LoginCode}, this.AddHolidayApplyResultOperationCompleted, userState);
        }
        
        private void OnAddHolidayApplyResultOperationCompleted(object arg) {
            if ((this.AddHolidayApplyResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHolidayApplyResultCompleted(this, new AddHolidayApplyResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOvertTimeApplyResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel AddOvertTimeApplyResult(string AuthToken, string UserCode, string ApplyType, string BeginDate, string EndDate, string OtConvertType, string ApplyMode, string ApplyLen, string ApplyID, string Remarks, string LoginCode) {
            object[] results = this.Invoke("AddOvertTimeApplyResult", new object[] {
                        AuthToken,
                        UserCode,
                        ApplyType,
                        BeginDate,
                        EndDate,
                        OtConvertType,
                        ApplyMode,
                        ApplyLen,
                        ApplyID,
                        Remarks,
                        LoginCode});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void AddOvertTimeApplyResultAsync(string AuthToken, string UserCode, string ApplyType, string BeginDate, string EndDate, string OtConvertType, string ApplyMode, string ApplyLen, string ApplyID, string Remarks, string LoginCode) {
            this.AddOvertTimeApplyResultAsync(AuthToken, UserCode, ApplyType, BeginDate, EndDate, OtConvertType, ApplyMode, ApplyLen, ApplyID, Remarks, LoginCode, null);
        }
        
        /// <remarks/>
        public void AddOvertTimeApplyResultAsync(string AuthToken, string UserCode, string ApplyType, string BeginDate, string EndDate, string OtConvertType, string ApplyMode, string ApplyLen, string ApplyID, string Remarks, string LoginCode, object userState) {
            if ((this.AddOvertTimeApplyResultOperationCompleted == null)) {
                this.AddOvertTimeApplyResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOvertTimeApplyResultOperationCompleted);
            }
            this.InvokeAsync("AddOvertTimeApplyResult", new object[] {
                        AuthToken,
                        UserCode,
                        ApplyType,
                        BeginDate,
                        EndDate,
                        OtConvertType,
                        ApplyMode,
                        ApplyLen,
                        ApplyID,
                        Remarks,
                        LoginCode}, this.AddOvertTimeApplyResultOperationCompleted, userState);
        }
        
        private void OnAddOvertTimeApplyResultOperationCompleted(object arg) {
            if ((this.AddOvertTimeApplyResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOvertTimeApplyResultCompleted(this, new AddOvertTimeApplyResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AttendanceApplyResultAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel AttendanceApplyResultAdd(string AuthToken, string ApplyID, string UserCode, string ApplyType, string SignData, string SignTime, string Inout, string Remarks, string LoginCode) {
            object[] results = this.Invoke("AttendanceApplyResultAdd", new object[] {
                        AuthToken,
                        ApplyID,
                        UserCode,
                        ApplyType,
                        SignData,
                        SignTime,
                        Inout,
                        Remarks,
                        LoginCode});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void AttendanceApplyResultAddAsync(string AuthToken, string ApplyID, string UserCode, string ApplyType, string SignData, string SignTime, string Inout, string Remarks, string LoginCode) {
            this.AttendanceApplyResultAddAsync(AuthToken, ApplyID, UserCode, ApplyType, SignData, SignTime, Inout, Remarks, LoginCode, null);
        }
        
        /// <remarks/>
        public void AttendanceApplyResultAddAsync(string AuthToken, string ApplyID, string UserCode, string ApplyType, string SignData, string SignTime, string Inout, string Remarks, string LoginCode, object userState) {
            if ((this.AttendanceApplyResultAddOperationCompleted == null)) {
                this.AttendanceApplyResultAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttendanceApplyResultAddOperationCompleted);
            }
            this.InvokeAsync("AttendanceApplyResultAdd", new object[] {
                        AuthToken,
                        ApplyID,
                        UserCode,
                        ApplyType,
                        SignData,
                        SignTime,
                        Inout,
                        Remarks,
                        LoginCode}, this.AttendanceApplyResultAddOperationCompleted, userState);
        }
        
        private void OnAttendanceApplyResultAddOperationCompleted(object arg) {
            if ((this.AttendanceApplyResultAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttendanceApplyResultAddCompleted(this, new AttendanceApplyResultAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApplyResultRevoke", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel ApplyResultRevoke(string AuthToken, string UserCode, string ApplyID, string ApplyType, string ApplyDate, string Remarks, string LoginCode, string OpeType, string ExtParams) {
            object[] results = this.Invoke("ApplyResultRevoke", new object[] {
                        AuthToken,
                        UserCode,
                        ApplyID,
                        ApplyType,
                        ApplyDate,
                        Remarks,
                        LoginCode,
                        OpeType,
                        ExtParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyResultRevokeAsync(string AuthToken, string UserCode, string ApplyID, string ApplyType, string ApplyDate, string Remarks, string LoginCode, string OpeType, string ExtParams) {
            this.ApplyResultRevokeAsync(AuthToken, UserCode, ApplyID, ApplyType, ApplyDate, Remarks, LoginCode, OpeType, ExtParams, null);
        }
        
        /// <remarks/>
        public void ApplyResultRevokeAsync(string AuthToken, string UserCode, string ApplyID, string ApplyType, string ApplyDate, string Remarks, string LoginCode, string OpeType, string ExtParams, object userState) {
            if ((this.ApplyResultRevokeOperationCompleted == null)) {
                this.ApplyResultRevokeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyResultRevokeOperationCompleted);
            }
            this.InvokeAsync("ApplyResultRevoke", new object[] {
                        AuthToken,
                        UserCode,
                        ApplyID,
                        ApplyType,
                        ApplyDate,
                        Remarks,
                        LoginCode,
                        OpeType,
                        ExtParams}, this.ApplyResultRevokeOperationCompleted, userState);
        }
        
        private void OnApplyResultRevokeOperationCompleted(object arg) {
            if ((this.ApplyResultRevokeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyResultRevokeCompleted(this, new ApplyResultRevokeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeoFenceGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel GeoFenceGet(string AuthToken, string SearchParams) {
            object[] results = this.Invoke("GeoFenceGet", new object[] {
                        AuthToken,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void GeoFenceGetAsync(string AuthToken, string SearchParams) {
            this.GeoFenceGetAsync(AuthToken, SearchParams, null);
        }
        
        /// <remarks/>
        public void GeoFenceGetAsync(string AuthToken, string SearchParams, object userState) {
            if ((this.GeoFenceGetOperationCompleted == null)) {
                this.GeoFenceGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeoFenceGetOperationCompleted);
            }
            this.InvokeAsync("GeoFenceGet", new object[] {
                        AuthToken,
                        SearchParams}, this.GeoFenceGetOperationCompleted, userState);
        }
        
        private void OnGeoFenceGetOperationCompleted(object arg) {
            if ((this.GeoFenceGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeoFenceGetCompleted(this, new GeoFenceGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExceptionGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel ExceptionGet(string AuthToken, string SearchParams) {
            object[] results = this.Invoke("ExceptionGet", new object[] {
                        AuthToken,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void ExceptionGetAsync(string AuthToken, string SearchParams) {
            this.ExceptionGetAsync(AuthToken, SearchParams, null);
        }
        
        /// <remarks/>
        public void ExceptionGetAsync(string AuthToken, string SearchParams, object userState) {
            if ((this.ExceptionGetOperationCompleted == null)) {
                this.ExceptionGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExceptionGetOperationCompleted);
            }
            this.InvokeAsync("ExceptionGet", new object[] {
                        AuthToken,
                        SearchParams}, this.ExceptionGetOperationCompleted, userState);
        }
        
        private void OnExceptionGetOperationCompleted(object arg) {
            if ((this.ExceptionGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExceptionGetCompleted(this, new ExceptionGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AttendCommonBusiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel AttendCommonBusiness(string AuthToken, string SearchParams) {
            object[] results = this.Invoke("AttendCommonBusiness", new object[] {
                        AuthToken,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void AttendCommonBusinessAsync(string AuthToken, string SearchParams) {
            this.AttendCommonBusinessAsync(AuthToken, SearchParams, null);
        }
        
        /// <remarks/>
        public void AttendCommonBusinessAsync(string AuthToken, string SearchParams, object userState) {
            if ((this.AttendCommonBusinessOperationCompleted == null)) {
                this.AttendCommonBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttendCommonBusinessOperationCompleted);
            }
            this.InvokeAsync("AttendCommonBusiness", new object[] {
                        AuthToken,
                        SearchParams}, this.AttendCommonBusinessOperationCompleted, userState);
        }
        
        private void OnAttendCommonBusinessOperationCompleted(object arg) {
            if ((this.AttendCommonBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttendCommonBusinessCompleted(this, new AttendCommonBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalaryOutput", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResCommonModel SalaryOutput(string AuthToken, string BusType, string SearchParams) {
            object[] results = this.Invoke("SalaryOutput", new object[] {
                        AuthToken,
                        BusType,
                        SearchParams});
            return ((ResCommonModel)(results[0]));
        }
        
        /// <remarks/>
        public void SalaryOutputAsync(string AuthToken, string BusType, string SearchParams) {
            this.SalaryOutputAsync(AuthToken, BusType, SearchParams, null);
        }
        
        /// <remarks/>
        public void SalaryOutputAsync(string AuthToken, string BusType, string SearchParams, object userState) {
            if ((this.SalaryOutputOperationCompleted == null)) {
                this.SalaryOutputOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalaryOutputOperationCompleted);
            }
            this.InvokeAsync("SalaryOutput", new object[] {
                        AuthToken,
                        BusType,
                        SearchParams}, this.SalaryOutputOperationCompleted, userState);
        }
        
        private void OnSalaryOutputOperationCompleted(object arg) {
            if ((this.SalaryOutputCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalaryOutputCompleted(this, new SalaryOutputCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResCommonModel {
        
        private string resFlagField;
        
        private string resMsgField;
        
        private string resCodeField;
        
        private object resDataField;
        
        private ResCommonModel[] resObjField;
        
        /// <remarks/>
        public string resFlag {
            get {
                return this.resFlagField;
            }
            set {
                this.resFlagField = value;
            }
        }
        
        /// <remarks/>
        public string resMsg {
            get {
                return this.resMsgField;
            }
            set {
                this.resMsgField = value;
            }
        }
        
        /// <remarks/>
        public string resCode {
            get {
                return this.resCodeField;
            }
            set {
                this.resCodeField = value;
            }
        }
        
        /// <remarks/>
        public object resData {
            get {
                return this.resDataField;
            }
            set {
                this.resDataField = value;
            }
        }
        
        /// <remarks/>
        public ResCommonModel[] resObj {
            get {
                return this.resObjField;
            }
            set {
                this.resObjField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAttendancePeriodCompletedEventHandler(object sender, GetAttendancePeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendancePeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendancePeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAttendanceRecordCompletedEventHandler(object sender, GetAttendanceRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendanceRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendanceRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSingleAttendanceRecordCompletedEventHandler(object sender, AddSingleAttendanceRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSingleAttendanceRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSingleAttendanceRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSummaryAttendanceResultCompletedEventHandler(object sender, GetSummaryAttendanceResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSummaryAttendanceResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSummaryAttendanceResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDetailAttendanceResultCompletedEventHandler(object sender, GetDetailAttendanceResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailAttendanceResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailAttendanceResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddHolidayApplyResultCompletedEventHandler(object sender, AddHolidayApplyResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHolidayApplyResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHolidayApplyResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOvertTimeApplyResultCompletedEventHandler(object sender, AddOvertTimeApplyResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOvertTimeApplyResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOvertTimeApplyResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AttendanceApplyResultAddCompletedEventHandler(object sender, AttendanceApplyResultAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttendanceApplyResultAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AttendanceApplyResultAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyResultRevokeCompletedEventHandler(object sender, ApplyResultRevokeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyResultRevokeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyResultRevokeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeoFenceGetCompletedEventHandler(object sender, GeoFenceGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeoFenceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeoFenceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExceptionGetCompletedEventHandler(object sender, ExceptionGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExceptionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExceptionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AttendCommonBusinessCompletedEventHandler(object sender, AttendCommonBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttendCommonBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AttendCommonBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SalaryOutputCompletedEventHandler(object sender, SalaryOutputCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalaryOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalaryOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResCommonModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResCommonModel)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591