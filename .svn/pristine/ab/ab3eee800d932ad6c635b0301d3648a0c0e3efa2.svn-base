(function () {
    var path = config.webapi;
    var userinfo = learun.storage.get('logininfo');      
    var page = {
        isScroll: true,
        init: function ($page, param) {

            $('img').attr('disable',false);
           // $page.find('#fileToUpload').imagepicker(); 
            $page.find('#saveIma').on('tap', function () {
                var fr = new FileReader();
                fr.readAsDataURL(document.getElementById("fileToUpload").files[0]);
                fr.onload = function (e) {
                    $('img').attr('src', e.target.result);
                };
                console.log("----->" + $("#bankcard").val());
                if (CheckBankNo($("#bankcard").val()) != "") {
                    return learun.layer.warning(CheckBankNo($("#bankcard").val()), function () { }, '消息提示', '关闭');
                }
                var data = {
                    bankcard: $("#bankcard").val()
                };
                var formData = new FormData();
              
                var user = {
                    userInfo: userinfo, // 正式请换用设备号
                    data: data
                };
                var userStr = JSON.stringify(user);
                console.log("-------->" + userStr);
                if (document.getElementById("fileToUpload").value == "" || document.getElementById("fileToUpload").value == "null") {
                    return learun.layer.warning("请上传证件照", function () { }, '消息提示', '关闭');
                } 
                formData.append("user", userStr);
                formData.append("file", document.getElementById("fileToUpload").files[0]);
                var path = config.webapi + "SendReport/UserImaInfo";
                learun.layer.loading(true, "正在保存证件照，请稍后");
                $.ajax({
                    type: "post",
                    url: path,
                    data: formData,
                    enctype: 'multipart/form-data',
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    success: function (res) {
                        learun.layer.loading(false);
                        if (res === null) {
                            learun.layer.warning('无法连接服务器,请检测网络！', function () { },
                                '消息提示',
                                '关闭');
                            return;
                        }
                        if (res.code === 200) {
                            learun.layer.toast(res.info);
                            // learun.tab.go('my');
                        } else {
                            learun.layer.warning(res.info, function () { }, '消息提示',
                                '关闭');
                        }
                    }
                });
            }); 


            // 全局对象，不同function使用传递数据
            const imgFile = {};
            function handleInputChange(event) {
                // 获取当前选中的文件
                const file = event.target.files[0];
                const imgMasSize = 1024 * 1024 * 10; // 10MB

                // 检查文件类型
                if (['jpeg', 'png', 'gif', 'jpg'].indexOf(file.type.split("/")[1]) < 0) {
                    // 自定义报错方式
                    // Toast.error("文件类型仅支持 jpeg/png/gif！", 2000, undefined, false);
                    return;
                }

                // 文件大小限制
                if (file.size > imgMasSize) {
                    // 文件大小自定义限制
                    // Toast.error("文件大小不能超过10MB！", 2000, undefined, false);
                    return;
                }

                // 判断是否是ios
                if (!!window.navigator.userAgent.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/)) {
                    // iOS
                    transformFileToFormData(file);
                    return;
                }

                // 图片压缩之旅
                transformFileToDataUrl(file);
            }
            // 将File append进 FormData
            function transformFileToFormData(file) {
                const formData = new FormData();
                // 自定义formData中的内容
                // type
                formData.append('type', file.type);
                // size
                formData.append('size', file.size || "image/jpeg");
                // name
                formData.append('name', file.name);
                // lastModifiedDate
                formData.append('lastModifiedDate', file.lastModifiedDate);
                // append 文件
                formData.append('file', file);
                // 上传图片
                uploadImg(formData);
            }
            // 将file转成dataUrl
            function transformFileToDataUrl(file) {
                const imgCompassMaxSize = 200 * 1024; // 超过 200k 就压缩

                // 存储文件相关信息
                imgFile.type = file.type || 'image/jpeg'; // 部分安卓出现获取不到type的情况
                imgFile.size = file.size;
                imgFile.name = file.name;
                imgFile.lastModifiedDate = file.lastModifiedDate;

                // 封装好的函数
                const reader = new FileReader();

                // file转dataUrl是个异步函数，要将代码写在回调里
                reader.onload = function (e) {
                    const result = e.target.result;

                    if (result.length < imgCompassMaxSize) {
                        compress(result, processData, false);    // 图片不压缩
                    } else {
                        compress(result, processData);            // 图片压缩
                    }
                };

                reader.readAsDataURL(file);
            }
            // 使用canvas绘制图片并压缩
            function compress(dataURL, callback, shouldCompress = true) {
                const img = new window.Image();

                img.src = dataURL;

                img.onload = function () {
                    const canvas = document.createElement('canvas');
                    const ctx = canvas.getContext('2d');

                    canvas.width = img.width;
                    canvas.height = img.height;

                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

                    let compressedDataUrl;

                    if (shouldCompress) {
                        compressedDataUrl = canvas.toDataURL(imgFile.type, 0.2);
                    } else {
                        compressedDataUrl = canvas.toDataURL(imgFile.type, 1);
                    }

                    callback(compressedDataUrl);
                }
            }

            function processData(dataURL) {
                // 这里使用二进制方式处理dataUrl
                const binaryString = window.atob(dataUrl.split(',')[1]);
                const arrayBuffer = new ArrayBuffer(binaryString.length);
                const intArray = new Uint8Array(arrayBuffer);
                const imgFile = this.imgFile;

                for (let i = 0, j = binaryString.length; i < j; i++) {
                    intArray[i] = binaryString.charCodeAt(i);
                }

                const data = [intArray];

                let blob;

                try {
                    blob = new Blob(data, { type: imgFile.type });
                } catch (error) {
                    window.BlobBuilder = window.BlobBuilder ||
                        window.WebKitBlobBuilder ||
                        window.MozBlobBuilder ||
                        window.MSBlobBuilder;
                    if (error.name === 'TypeError' && window.BlobBuilder) {
                        const builder = new BlobBuilder();
                        builder.append(arrayBuffer);
                        blob = builder.getBlob(imgFile.type);
                    } else {
                        // Toast.error("版本过低，不支持上传图片", 2000, undefined, false);
                        throw new Error('版本过低，不支持上传图片');
                    }
                }

                // blob 转file
                const fileOfBlob = new File([blob], imgFile.name);
                const formData = new FormData();

                // type
                formData.append('type', imgFile.type);
                // size
                formData.append('size', fileOfBlob.size);
                // name
                formData.append('name', imgFile.name);
                // lastModifiedDate
                formData.append('lastModifiedDate', imgFile.lastModifiedDate);
                // append 文件
                formData.append('file', fileOfBlob);

                uploadImg(formData);
            }

            // 上传图片
            function uploadImg(formData) {
                const xhr = new XMLHttpRequest();

                // 进度监听
                xhr.upload.addEventListener('progress', (e) => { console.log(e.loaded / e.total) }, false);
                // 加载监听
                // xhr.addEventListener('load', ()=>{console.log("加载中");}, false);
                // 错误监听
                xhr.addEventListener('error', () => { Toast.error("上传失败！", 2000, undefined, false); }, false);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        const result = JSON.parse(xhr.responseText);
                        if (xhr.status === 200) {
                            // 上传成功


                        } else {
                            // 上传失败
                        }
                    }
                };
                xhr.open('POST', '/uploadUrl', true);
                xhr.send(formData);
            }
        }
    };
    return page;
})();

function CheckBankNo(t_bankno) {
    var bankno = $.trim(t_bankno);
    if (bankno == "") {
        return "请填写银行卡号";
    }
    if (bankno.length < 16 || bankno.length > 19) {
        return "银行卡号长度必须在16到19之间";
    }
    var num = /^\d*$/; //全数字
    if (!num.exec(bankno)) {
        return "银行卡号必须全为数字";
    }
    //开头6位
    var strBin = "10,18,30,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,65,68,69,84,87,88,94,95,98,99";
    if (strBin.indexOf(bankno.substring(0, 2)) == -1) {
        return "银行卡号开头6位不符合规范";
    }
    return "";
}