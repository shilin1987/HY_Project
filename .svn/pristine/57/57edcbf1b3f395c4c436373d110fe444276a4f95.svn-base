<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Learun.DataBase</name>
    </assembly>
    <members>
        <member name="T:Learun.DataBase.DatabaseType">
            <summary>
            版 本 Learun-ADMS V7.0.6 力软敏捷开发框架
            Copyright (c) 2013-2020 上海力软信息技术有限公司
            创建人：力软-框架开发组
            日 期：2017.03.04
            描 述：数据库类型枚举
            </summary>
        </member>
        <member name="F:Learun.DataBase.DatabaseType.SqlServer">
            <summary>
            数据库类型：SqlServer
            </summary>
        </member>
        <member name="F:Learun.DataBase.DatabaseType.MySql">
            <summary>
            数据库类型：MySql
            </summary>
        </member>
        <member name="F:Learun.DataBase.DatabaseType.Oracle">
            <summary>
            数据库类型：Oracle
            </summary>
        </member>
        <member name="F:Learun.DataBase.DatabaseType.Access">
            <summary>
            数据库类型：Access
            </summary>
        </member>
        <member name="F:Learun.DataBase.DatabaseType.SQLite">
            <summary>
            数据库类型：SQLite
            </summary>
        </member>
        <member name="T:Learun.DataBase.IDatabase">
            <summary>
            版 本 Learun-ADMS V7.0.6 力软敏捷开发框架
            Copyright (c) 2013-2020 上海力软信息技术有限公司
            创建人：力软-框架开发组
            日 期：2017.03.04
            描 述：数据库方法操作接口
            </summary>
        </member>
        <member name="M:Learun.DataBase.IDatabase.getDbConnection">
            <summary>
            获取连接上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.BeginTrans">
            <summary>
            开启事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Commit">
            <summary>
            提交
            </summary>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Rollback">
            <summary>
            回滚
            </summary>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Learun.DataBase.IDatabase.ExecuteBySql(System.String)">
            <summary>
            执行sql语句
            </summary>
            <param name="strSql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.ExecuteBySql(System.String,System.Object)">
            <summary>
            执行sql语句(带参数)
            </summary>
            <param name="strSql">sql语句</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.ExecuteByProc(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.ExecuteByProc(System.String,System.Object)">
            <summary>
            执行存储过程 
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.ExecuteByProc``1(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.ExecuteByProc``1(System.String,System.Object)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.QueryByProc``1(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.QueryByProc``1(System.String,System.Object)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Insert``1(``0)">
            <summary>
            插入实体数据
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entity">实体数据</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Insert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量插入实体数据
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entities">实体数据列表</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Delete``1(``0)">
            <summary>
            删除实体数据
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entity">实体数据（需要主键赋值）</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量删除实体数据
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entities">实体数据列表</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除表数据（根据Lambda表达式）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Update``1(``0)">
            <summary>
            更新实体数据
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entity">实体数据</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.UpdateEx``1(``0)">
            <summary>
            更新实体数据
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entity">实体数据</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.Update``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量更新实体数据
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entities">实体数据列表</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindEntity``1(System.Object)">
            <summary>
            查找一个实体根据主键
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="KeyValue">主键</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindEntity``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            查找一个实体（根据表达式）
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="condition">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindEntity``1(System.String,System.Object)">
            <summary>
            查找一个实体（根据sql）
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="strSql">sql语句</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.IQueryable``1">
            <summary>
            获取IQueryable表达式
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.IQueryable``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取IQueryable表达式(根据表达式)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="condition">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1">
            <summary>
            查询列表（获取表所有数据）
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.Func{``0,System.Object})">
            <summary>
            查询列表（获取表所有数据）
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="orderby">排序</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            查询列表根据表达式
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="condition">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.String)">
            <summary>
            查询列表根据sql语句
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="strSql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.String,System.Object)">
            <summary>
            查询列表根据sql语句(带参数)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="strSql">sql语句</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询列表(分页)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <param name="total">总共数据条数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询列表(分页)带表达式条件
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="condition">表达式</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <param name="total">总共数据条数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询列表(分页)根据sql语句
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strSql">sql语句</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <param name="total">总共数据条数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindList``1(System.String,System.Object,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询列表(分页)根据sql语句
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strSql">sql语句</param>
            <param name="dbParameter">参数</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <param name="total">总共数据条数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindTable(System.String)">
            <summary>
            查询数据
            </summary>
            <param name="strSql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindTable(System.String,System.Object)">
            <summary>
            查询数据
            </summary>
            <param name="strSql">sql语句</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindTable(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="strSql">sql语句</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <param name="total">总共数据条数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindTable(System.String,System.Object,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="strSql">sql语句</param>
            <param name="dbParameter">参数</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <param name="total">总共数据条数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindObject(System.String)">
            <summary>
            获取查询对象
            </summary>
            <param name="strSql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.FindObject(System.String,System.Object)">
            <summary>
            获取查询对象
            </summary>
            <param name="strSql">sql语句</param>
            <param name="dbParameter">参数</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.GetDBTable``1">
            <summary>
            获取数据库表数据
            </summary>
            <typeparam name="T">反序列化类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.IDatabase.GetDBTableFields``1(System.String)">
            <summary>
            获取数据库表字段数据
            </summary>
            <typeparam name="T">反序列化类型</typeparam>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="T:Learun.DataBase.SqlHelper">
            <summary>
            版 本 Learun-ADMS V7.0.6 力软敏捷开发框架
            Copyright (c) 2013-2020 上海力软信息技术有限公司
            创建人：力软-框架开发组
            日 期：2017.03.04
            描 述：数据访问扩展
            </summary>
        </member>
        <member name="M:Learun.DataBase.SqlHelper.IDataReaderToDataTable(System.Data.IDataReader)">
            <summary>
             将IDataReader转换为DataTable
            </summary>
            <param name="reader">数据读取接口</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.SqlHelper.GetPropertyInfo``1(``0)">
            <summary>
            获取实体类键值（缓存）
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="entity">实体对象</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.SqlHelper.JObjectToParameter(Newtonsoft.Json.Linq.JObject)">
            <summary>
            将json对象转化成Dapper可认的参数
            </summary>
            <param name="jObject">json对象</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.SqlHelper.FieldValueParamToParameter(System.Collections.Generic.List{Learun.Util.FieldValueParam})">
            <summary>
            将对象转化成Dapper可认的参数
            </summary>
            <param name="fieldValueParams">对象</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.SqlHelper.SqlPageSql(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            sql分页语句
            </summary>
            <param name="strSql">sql语句</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.SqlHelper.OraclePageSql(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            oracle分页语句
            </summary>
            <param name="strSql">sql语句</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:Learun.DataBase.SqlHelper.MySqlPageSql(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            mysql分页语句
            </summary>
            <param name="strSql">sql语句</param>
            <param name="orderField">排序字段</param>
            <param name="isAsc">排序类型</param>
            <param name="pageSize">每页数据条数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
    </members>
</doc>
